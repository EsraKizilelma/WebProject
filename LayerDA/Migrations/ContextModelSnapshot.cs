// <auto-generated />
using System;
using LayerDA.Concrate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LayerDA.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LayerE.Concrate.YAbout", b =>
                {
                    b.Property<int>("YAbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YAbId"), 1L, 1);

                    b.Property<string>("YAbDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAbDetails1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAbImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAbImage1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAbMapLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YAbStatus")
                        .HasColumnType("bit");

                    b.HasKey("YAbId");

                    b.ToTable("YAbouts");
                });

            modelBuilder.Entity("LayerE.Concrate.YAskUs", b =>
                {
                    b.Property<int>("YAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YAId"), 1L, 1);

                    b.Property<DateTime>("YADate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YAMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YAStatus")
                        .HasColumnType("bit");

                    b.Property<string>("YASubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YAUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YAId");

                    b.ToTable("YAskUss");
                });

            modelBuilder.Entity("LayerE.Concrate.YBlog", b =>
                {
                    b.Property<int>("YBID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YBID"), 1L, 1);

                    b.Property<int>("IdYCategory")
                        .HasColumnType("int");

                    b.Property<string>("YBContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YBCreateDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YBImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YBSmallImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YBStatus")
                        .HasColumnType("bit");

                    b.Property<string>("YBTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YCategoryIdYCategory")
                        .HasColumnType("int");

                    b.HasKey("YBID");

                    b.HasIndex("YCategoryIdYCategory");

                    b.ToTable("YBlogs");
                });

            modelBuilder.Entity("LayerE.Concrate.YCategory", b =>
                {
                    b.Property<int>("IdYCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdYCategory"), 1L, 1);

                    b.Property<string>("DescriptionYCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameYCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusYCategory")
                        .HasColumnType("bit");

                    b.HasKey("IdYCategory");

                    b.ToTable("YCategories");
                });

            modelBuilder.Entity("LayerE.Concrate.YThought", b =>
                {
                    b.Property<int>("YTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YTId"), 1L, 1);

                    b.Property<int>("YBID")
                        .HasColumnType("int");

                    b.Property<int>("YBlogYBID")
                        .HasColumnType("int");

                    b.Property<string>("YTContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YTDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("YTStatus")
                        .HasColumnType("bit");

                    b.Property<string>("YTTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YTUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YTId");

                    b.HasIndex("YBlogYBID");

                    b.ToTable("YThoughts");
                });

            modelBuilder.Entity("LayerE.Concrate.YWriter", b =>
                {
                    b.Property<int>("YWID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YWID"), 1L, 1);

                    b.Property<string>("YWAbout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YWImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YWMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YWName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YWPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YWStatus")
                        .HasColumnType("bit");

                    b.HasKey("YWID");

                    b.ToTable("YWriters");
                });

            modelBuilder.Entity("LayerE.Concrate.YBlog", b =>
                {
                    b.HasOne("LayerE.Concrate.YCategory", "YCategory")
                        .WithMany("YBlogs")
                        .HasForeignKey("YCategoryIdYCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YCategory");
                });

            modelBuilder.Entity("LayerE.Concrate.YThought", b =>
                {
                    b.HasOne("LayerE.Concrate.YBlog", "YBlog")
                        .WithMany("YThoughts")
                        .HasForeignKey("YBlogYBID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YBlog");
                });

            modelBuilder.Entity("LayerE.Concrate.YBlog", b =>
                {
                    b.Navigation("YThoughts");
                });

            modelBuilder.Entity("LayerE.Concrate.YCategory", b =>
                {
                    b.Navigation("YBlogs");
                });
#pragma warning restore 612, 618
        }
    }
}
